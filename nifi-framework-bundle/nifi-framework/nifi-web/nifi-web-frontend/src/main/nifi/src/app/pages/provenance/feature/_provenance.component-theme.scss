/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin generate-theme($material-theme, $nifi-theme) {
    // Get the color config from the theme.
    $material-theme-color-config: mat.get-color-config($material-theme);
    $nifi-theme-color-config: mat.get-color-config($nifi-theme);

    // Get the color palette from the color-config.
    $material-theme-primary-palette: map.get($material-theme-color-config, 'primary');
    $material-theme-accent-palette: map.get($material-theme-color-config, 'accent');
    $nifi-theme-surface-palette: map.get($nifi-theme-color-config, 'primary');

    // Get hues from palette
    $is-dark: map-get($material-theme-color-config, is-dark);
    $material-theme-primary-palette-darker: mat.get-color-from-palette($material-theme-primary-palette, darker);
    $material-theme-primary-palette-default: mat.get-color-from-palette($material-theme-primary-palette);
    $material-theme-accent-palette-default: mat.get-color-from-palette($material-theme-accent-palette, default);
    $nifi-theme-surface-palette-lighter: mat.get-color-from-palette($nifi-theme-surface-palette, lighter);
    $nifi-theme-surface-palette-darker: mat.get-color-from-palette($nifi-theme-surface-palette, darker);
    $nifi-theme-surface-palette-darker-contrast: mat.get-color-from-palette(
        $nifi-theme-surface-palette,
        darker-contrast
    );
    $nifi-theme-surface-palette-lighter-contrast: mat.get-color-from-palette(
        $nifi-theme-surface-palette,
        lighter-contrast
    );
    $surface-contrast: if(
        $is-dark,
        $nifi-theme-surface-palette-darker-contrast,
        $nifi-theme-surface-palette-lighter-contrast
    );

    rect.lineage {
        fill: if($is-dark, $nifi-theme-surface-palette-darker, $nifi-theme-surface-palette-lighter);
    }

    g.flowfile-icon text {
        fill: $material-theme-accent-palette-default;
    }

    circle.event-circle {
        fill: if($is-dark, $material-theme-primary-palette-default, $material-theme-primary-palette-darker);
        stroke: $surface-contrast;
    }

    path.link {
        stroke: $surface-contrast;
    }

    marker {
        @extend .surface-contrast;
    }

    circle.flowfile-link {
        fill: if($is-dark, $nifi-theme-surface-palette-darker, $nifi-theme-surface-palette-lighter);
        stroke: $surface-contrast;
    }
}
